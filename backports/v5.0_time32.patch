diff --git a/drivers/media/v4l2-core/v4l2-compat-ioctl32.c b/drivers/media/v4l2-core/v4l2-compat-ioctl32.c
index f3bed37859a2..6245a850f961 100644
--- a/drivers/media/v4l2-core/v4l2-compat-ioctl32.c
+++ b/drivers/media/v4l2-core/v4l2-compat-ioctl32.c
@@ -298,7 +298,7 @@ struct v4l2_buffer32 {
 	__s32			request_fd;
 };
 
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 struct v4l2_buffer32_time32 {
 	__u32			index;
 	__u32			type;	/* enum v4l2_buf_type */
@@ -434,7 +434,7 @@ static int get_v4l2_buffer32(struct v4l2_buffer *vb,
 	return 0;
 }
 
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 static int get_v4l2_buffer32_time32(struct v4l2_buffer *vb,
 				    struct v4l2_buffer32_time32 __user *arg)
 {
@@ -523,7 +523,7 @@ static int put_v4l2_buffer32(struct v4l2_buffer *vb,
 	return 0;
 }
 
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 static int put_v4l2_buffer32_time32(struct v4l2_buffer *vb,
 				    struct v4l2_buffer32_time32 __user *arg)
 {
@@ -769,7 +769,7 @@ static int put_v4l2_event32(struct v4l2_event *p64,
 
 #endif
 
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 struct v4l2_event32_time32 {
 	__u32				type;
 	union {
@@ -855,7 +855,7 @@ static int put_v4l2_edid32(struct v4l2_edid *p64,
 #define VIDIOC_CREATE_BUFS32	_IOWR('V', 92, struct v4l2_create_buffers32)
 #define VIDIOC_PREPARE_BUF32	_IOWR('V', 93, struct v4l2_buffer32)
 
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 #define VIDIOC_QUERYBUF32_TIME32	_IOWR('V',  9, struct v4l2_buffer32_time32)
 #define VIDIOC_QBUF32_TIME32		_IOWR('V', 15, struct v4l2_buffer32_time32)
 #define VIDIOC_DQBUF32_TIME32		_IOWR('V', 17, struct v4l2_buffer32_time32)
@@ -876,7 +876,7 @@ unsigned int v4l2_compat_translate_cmd(unsigned int cmd)
 		return VIDIOC_G_FBUF;
 	case VIDIOC_S_FBUF32:
 		return VIDIOC_S_FBUF;
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 	case VIDIOC_QUERYBUF32_TIME32:
 		return VIDIOC_QUERYBUF;
 	case VIDIOC_QBUF32_TIME32:
@@ -914,7 +914,7 @@ unsigned int v4l2_compat_translate_cmd(unsigned int cmd)
 	case VIDIOC_DQEVENT32:
 		return VIDIOC_DQEVENT;
 #endif
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 	case VIDIOC_DQEVENT32_TIME32:
 		return VIDIOC_DQEVENT;
 #endif
@@ -932,7 +932,7 @@ int v4l2_compat_get_user(void __user *arg, void *parg, unsigned int cmd)
 
 	case VIDIOC_S_FBUF32:
 		return get_v4l2_framebuffer32(parg, arg);
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 	case VIDIOC_QUERYBUF32_TIME32:
 	case VIDIOC_QBUF32_TIME32:
 	case VIDIOC_DQBUF32_TIME32:
@@ -976,7 +976,7 @@ int v4l2_compat_put_user(void __user *arg, void *parg, unsigned int cmd)
 
 	case VIDIOC_G_FBUF32:
 		return put_v4l2_framebuffer32(parg, arg);
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 	case VIDIOC_QUERYBUF32_TIME32:
 	case VIDIOC_QBUF32_TIME32:
 	case VIDIOC_DQBUF32_TIME32:
@@ -1010,7 +1010,7 @@ int v4l2_compat_put_user(void __user *arg, void *parg, unsigned int cmd)
 	case VIDIOC_DQEVENT32:
 		return put_v4l2_event32(parg, arg);
 #endif
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 	case VIDIOC_DQEVENT32_TIME32:
 		return put_v4l2_event32_time32(parg, arg);
 #endif
@@ -1027,7 +1027,7 @@ int v4l2_compat_get_array_args(struct file *file, void *mbuf,
 	memset(mbuf, 0, array_size);
 
 	switch (cmd) {
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 	case VIDIOC_QUERYBUF32_TIME32:
 	case VIDIOC_QBUF32_TIME32:
 	case VIDIOC_DQBUF32_TIME32:
@@ -1097,7 +1097,7 @@ int v4l2_compat_put_array_args(struct file *file, void __user *user_ptr,
 	int err = 0;
 
 	switch (cmd) {
-#ifdef CONFIG_COMPAT_32BIT_TIME
+#if 0
 	case VIDIOC_QUERYBUF32_TIME32:
 	case VIDIOC_QBUF32_TIME32:
 	case VIDIOC_DQBUF32_TIME32:
diff --git a/drivers/media/v4l2-core/v4l2-ioctl.c b/drivers/media/v4l2-core/v4l2-ioctl.c
index a858acea6547..0d6022eb1f57 100644
--- a/drivers/media/v4l2-core/v4l2-ioctl.c
+++ b/drivers/media/v4l2-core/v4l2-ioctl.c
@@ -782,7 +782,7 @@ static void v4l_print_event(const void *arg, bool write_only)
 	const struct v4l2_event *p = arg;
 	const struct v4l2_event_ctrl *c;
 
-	pr_cont("type=0x%x, pending=%u, sequence=%u, id=%u, timestamp=%llu.%9.9llu\n",
+	pr_cont("type=0x%x, pending=%u, sequence=%u, id=%u, timestamp=%lu.%9.9lu\n",
 			p->type, p->pending, p->sequence, p->id,
 			p->timestamp.tv_sec, p->timestamp.tv_nsec);
 	switch (p->type) {
@@ -3159,7 +3159,7 @@ static int check_array_args(unsigned int cmd, void *parg, size_t *array_size,
 
 static unsigned int video_translate_cmd(unsigned int cmd)
 {
-#if !defined(CONFIG_64BIT) && defined(CONFIG_COMPAT_32BIT_TIME)
+#if 0
 	switch (cmd) {
 	case VIDIOC_DQEVENT_TIME32:
 		return VIDIOC_DQEVENT;
@@ -3215,7 +3215,7 @@ static int video_get_user(void __user *arg, void *parg,
 		err = v4l2_compat_get_user(arg, parg, cmd);
 	} else {
 		memset(parg, 0, n);
-#if !defined(CONFIG_64BIT) && defined(CONFIG_COMPAT_32BIT_TIME)
+#if 0
 		switch (cmd) {
 		case VIDIOC_QUERYBUF_TIME32:
 		case VIDIOC_QBUF_TIME32:
@@ -3270,7 +3270,7 @@ static int video_put_user(void __user *arg, void *parg,
 	if (in_compat_syscall())
 		return v4l2_compat_put_user(arg, parg, cmd);
 
-#if !defined(CONFIG_64BIT) && defined(CONFIG_COMPAT_32BIT_TIME)
+#if 0
 	switch (cmd) {
 	case VIDIOC_DQEVENT_TIME32: {
 		struct v4l2_event *ev = parg;
diff --git a/include/media/v4l2-ioctl.h b/include/media/v4l2-ioctl.h
index edb733f21604..62d0acf2bb06 100644
--- a/include/media/v4l2-ioctl.h
+++ b/include/media/v4l2-ioctl.h
@@ -734,6 +734,7 @@ long int video_usercopy(struct file *file, unsigned int cmd,
 long int video_ioctl2(struct file *file,
 		      unsigned int cmd, unsigned long int arg);
 
+#if 0
 /*
  * The user space interpretation of the 'v4l2_event' differs
  * based on the 'time_t' definition on 32-bit architectures, so
@@ -788,5 +789,6 @@ struct v4l2_buffer_time32 {
 #define VIDIOC_QBUF_TIME32	_IOWR('V', 15, struct v4l2_buffer_time32)
 #define VIDIOC_DQBUF_TIME32	_IOWR('V', 17, struct v4l2_buffer_time32)
 #define VIDIOC_PREPARE_BUF_TIME32 _IOWR('V', 93, struct v4l2_buffer_time32)
+#endif
 
 #endif /* _V4L2_IOCTL_H */
diff --git a/include/uapi/linux/videodev2.h b/include/uapi/linux/videodev2.h
index aee75eb9e686..1990c65be334 100644
--- a/include/uapi/linux/videodev2.h
+++ b/include/uapi/linux/videodev2.h
@@ -993,7 +993,7 @@ struct v4l2_jpegcompression {
  *	M E M O R Y - M A P P I N G   B U F F E R S
  */
 
-#ifdef __KERNEL__
+#if 0
 /*
  * This corresponds to the user space version of timeval
  * for 64-bit time_t. sparc64 is different from everyone
@@ -1106,7 +1106,7 @@ struct v4l2_buffer {
 	__u32			bytesused;
 	__u32			flags;
 	__u32			field;
-#ifdef __KERNEL__
+#if 0
 	struct __kernel_v4l2_timeval timestamp;
 #else
 	struct timeval		timestamp;
@@ -2517,7 +2517,7 @@ struct v4l2_event {
 	} u;
 	__u32				pending;
 	__u32				sequence;
-#ifdef __KERNEL__
+#if 0
 	struct __kernel_timespec	timestamp;
 #else
 	struct timespec			timestamp;
